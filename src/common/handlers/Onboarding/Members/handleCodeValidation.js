const axios = require('axios');
const userService = require('../../../services/userService');
const sendMessage = require('../../../services/Wp-Envio-Msj/sendMessage');
const getUserInfo = require('../../../services/getUserInfo');
const handleAccountVerifed = require('./handleAccountVerifed');
const LLM = require('../../../handlers/LLM/LLM');

const handleCodeValidation = async (senderId, receivedMessage) => {
    console.log(`Mensaje recibido de ${senderId}: ${receivedMessage}`);

    const userInfo = await getUserInfo(senderId);
    let { userId, code_attempts } = userInfo;

    const userCode = receivedMessage.trim();

    // Si no es un c√≥digo num√©rico de 6 d√≠gitos
    if (!/^\d{6}$/.test(userCode)) {
        // 1Ô∏è‚É£ Activar LLM
        await LLM(senderId, receivedMessage);

        // 2Ô∏è‚É£ Mensajes aleatorios para formato inv√°lido
        const invalidFormatMessages = [
            'üî¢ El c√≥digo debe contener exactamente 6 n√∫meros. Int√©ntalo nuevamente por favor.',
            '‚ùå Ese c√≥digo no parece correcto. Recuerda que son 6 d√≠gitos. ¬øLo intentamos otra vez?',
            'ü§ñ Aseg√∫rate de ingresar un c√≥digo v√°lido. Debe tener solo n√∫meros y ser de 6 cifras.',
        ];
        const randomMessage = invalidFormatMessages[Math.floor(Math.random() * invalidFormatMessages.length)];
        await sendMessage(senderId, randomMessage);
        return;
    }

    // Validar el c√≥digo con la API
    const validationResult = await validateCodeWithAPI(userId, userCode);
    console.log('Respuesta de validaci√≥n:', validationResult);

    if (!validationResult || validationResult.message !== 'El c√≥digo de validaci√≥n ha sido confirmado correctamente') {
        code_attempts += 1;

        if (code_attempts >= 3) {
            await userService.updateUser(senderId, { code_attempts: 0 });
            await sendMessage(senderId, '‚ùå No he logrado validar el c√≥digo de verificaci√≥n. üìû Por favor comun√≠cate con nuestros ejecutiva Ana Haro de PAIS AC v√≠a whatsapp al +523330777236 para atender tu caso. üì≤ Te ayudaremos a recibir tu c√≥digo o verificar el problema. ‚úÖ');
            return;
        }

        await userService.updateUser(senderId, { code_attempts });

        await sendMessage(senderId, `‚ùå El c√≥digo ingresado no es v√°lido. Intento ${code_attempts}/3. üîÑ Por favor, intenta nuevamente. üìù`);
        return;
    }

    // Si el c√≥digo es v√°lido
    await userService.updateUser(senderId, { state: 'verificado', code_attempts: 0 });
    console.log(`‚úÖ Estado actualizado a 'verificado' para el usuario ${senderId}`);

    await sendMessage(senderId, 'üéâ Muchas gracias, tu cuenta ha sido validada exitosamente. ‚úÖ');
    await handleAccountVerifed(senderId);
};

const validateCodeWithAPI = async (userId, code) => {
    try {
        const url = process.env.CONFIRM_VALIDATION_CODE_URL;
        console.log(`Llamando a la API con URL: ${url}`);

        const requestBody = { id: userId, validationCode: code };
        const response = await axios.post(url, requestBody, {
            headers: { 'Content-Type': 'application/json' }
        });

        return response.data;
    } catch (error) {
        console.error('Error validando el c√≥digo:', error.response?.data || error.message);
        return null;
    }
};

module.exports = handleCodeValidation;
